# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build:
    working_directory: ~/repo
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0
      - image: rodolpheche/wiremock:2.27.2
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Setup Mocks
          working_directory: ./PriceAggregator.IntegrationTests
          command: find ./stubs -type f -exec curl -X POST "http://localhost:8080/__admin/mappings" --data-binary @{} \;
      - run: dotnet restore
      - run: dotnet build
      - run: dotnet test PriceAggregator.IntegrationTests/PriceAggregator.IntegrationTests.csproj -v n
      - run: dotnet test PriceAggregator.API.UnitTests/PriceAggregator.API.UnitTests.csproj -v n
      - run: dotnet test PriceAggregator.Application.UnitTests/PriceAggregator.Application.UnitTests.csproj -v n
      - run: dotnet test PriceAggregator.Domain.UnitTests/PriceAggregator.Domain.UnitTests.csproj -v n
      - run: dotnet test PriceAggregator.Infrastructure.UnitTests/PriceAggregator.Infrastructure.UnitTests/csproj -v n

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  run_integration_tests:
    jobs:
      - build
      
      
